Shorthand case with filter should work as expected
Should fail on merge using multiple unique indexes using same key if found different nodes
Should fail on merge using multiple unique indexes if found different nodes
Should fail on merge using multiple unique indexes if it found a node matching single property only
Should fail on merge using multiple unique indexes if it found a node matching single property only flipped order
Should fail on merge using multiple unique indexes and labels if found different nodes
Merge with uniqueness constraints must properly handle multiple labels
Failing when creation would violate constraint
Explanation of in-query procedure call
Returning a pattern expression with bound nodes
Using a variable-length pattern expression in a WITH
Pattern expression inside list comprehension
Filter using a pattern predicate that is a logical OR between two subqueries
Filter using a pattern predicate that is a logical OR between one negated subquery, two subqueries, and an equality expression
Filter using a pattern predicate that is a logical OR between one negated subquery, two subqueries, and an equality expression 2
Using a pattern predicate after aggregation 1
Using a pattern predicate after aggregation 2
Returning a relationship from a pattern predicate
Matching with complex composite pattern predicate
In-query call to procedure that takes no arguments
Calling the same procedure twice using the same outputs in each call
In-query call to VOID procedure that takes no arguments
In-query call to VOID procedure does not consume rows
In-query call to procedure with explicit arguments
In-query call to procedure with argument of type NUMBER accepts value of type INTEGER
In-query call to procedure with argument of type NUMBER accepts value of type FLOAT
In-query call to procedure with argument of type FLOAT accepts value of type INTEGER
In-query call to procedure with null argument
Find a shortest path among paths that fulfill a predicate on all nodes
Find a shortest path among paths that fulfill a predicate on all relationships
Find a shortest path among paths that fulfill a predicate on all relationships 2
Find a shortest path among paths that fulfill a predicate
Find a shortest path without loosing context information at runtime
Find a shortest path in an expression context
Finds shortest path
Optionally finds shortest path
Optionally finds shortest path using previously bound nodes
Returns null when not finding a shortest path during an OPTIONAL MATCH
Find relationships of a shortest path
Find no shortest path when a length limit prunes all candidates
Find no shortest path when the start node is null
Find all shortest paths
Find a combination of a shortest path and a pattern expression

//SkipLimitAcceptance.feature
Using a optional match after aggregation and before an aggregation

//MatchAcceptance.feature
difficult to plan query number 3
Variable length path with both sides already bound
