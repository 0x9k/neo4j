// ShortestPathAcceptance.feature
Find a combination of a shortest path and a pattern expression

// BuiltInProcedureAcceptance.feature
Getting all labels

// ProcedureCallAcceptance.feature
Standalone call to procedure that takes no arguments
  In-query call to procedure that takes no arguments
Calling the same procedure twice using the same outputs in each call
Standalone call to VOID procedure that takes no arguments
  In-query call to VOID procedure that takes no arguments
  In-query call to VOID procedure does not consume rows
Standalone call to VOID procedure that takes no arguments, called with implicit arguments
Standalone call to procedure with explicit arguments
  In-query call to procedure with explicit arguments
Standalone call to procedure with argument of type NUMBER  accepts value of type INTEGER
  In-query call to procedure with argument of type NUMBER  accepts value of type INTEGER
Standalone call to procedure with argument of type NUMBER  accepts value of type FLOAT
  In-query call to procedure with argument of type NUMBER  accepts value of type FLOAT
Standalone call to procedure with argument of type FLOAT   accepts value of type INTEGER
  In-query call to procedure with argument of type FLOAT   accepts value of type INTEGER
Standalone call to procedure with null argument
  In-query call to procedure with null argument
Standalone call to procedure should fail if input type is wrong
  In-query call to procedure should fail if input type is wrong
Standalone call to procedure should fail if explicit argument is missing
  In-query call to procedure should fail if explicit argument is missing
Standalone call to procedure should fail if too many explicit argument are given
  In-query call to procedure should fail if too many explicit argument are given
Standalone call to procedure should fail if implicit argument is missing
Standalone call to unknown procedure should fail
  In-query call to unknown procedure should fail
In-query procedure call should fail if shadowing an already bound variable
In-query procedure call should fail if one of the argument expressions uses an aggregation function
In-query call to procedure that takes arguments fails when trying to pass them implicitly
In-query call to procedure that has outputs fails if no outputs are yielded
In-query call to procedure that both takes arguments and has outputs fails if the arguments are passed implicitly and no outputs are yielded

//ExplainAcceptance.feature
Explanation of standalone procedure call
Explanation of   in-query procedure call

// PatternExpressionAcceptance.feature
Pattern expression inside list comprehension
Get node degree via length of pattern expression
Get node degree via length of pattern expression that specifies a relationship type
Nested pattern comprehensions
Nested pattern comprehensions 2
Nested pattern comprehensions 3
Nested pattern comprehensions 4

//OrderByAcceptance.feature - Unsupported orderability
ORDER BY nodes should return null results last in ascending order
ORDER BY relationships should return null results last in ascending order
Ordering is well defined across all types, ascending
Ordering is well defined across all types, descending
Ordering for lists, ascending
Ordering for lists, descending
ORDER BY node problem

//SkipLimitAcceptance.feature - Unsupported limit syntax
Negative parameter for LIMIT should not generate errors

// ReturnAcceptance.feature
LIMIT 0 should stop side effects

//AggregationAcceptance.feature
max() over strings
min() over strings
max() over mixed numeric values
min() over mixed numeric values
max() over mixed values
min() over mixed values
max() over list values
min() over list values

//DeleteAcceptance.feature
Return properties from deleted node

//IndexAcceptance.feature
STARTS WITH should handle null prefix

//UnwindAcceptance.feature
Nested unwind with longs
Nested unwind with doubles
Nested unwind with strings
Nested unwind with mixed types
Feature "AggregationAcceptance": Scenario "max() over strings"
Feature "AggregationAcceptance": Scenario "min() over strings"
Feature "AggregationAcceptance": Scenario "max() over mixed numeric values"
Feature "AggregationAcceptance": Scenario "min() over mixed numeric values"
Feature "AggregationAcceptance": Scenario "max() over mixed values"
Feature "AggregationAcceptance": Scenario "min() over mixed values"
Feature "AggregationAcceptance": Scenario "max() over list values"
Feature "AggregationAcceptance": Scenario "min() over list values"
Feature "BuiltInProcedureAcceptance": Scenario "Getting all labels"
Feature "DeleteAcceptance": Scenario "Return properties from deleted node"
Feature "ExplainAcceptance": Scenario "Explanation of standalone procedure call"
Feature "ExplainAcceptance": Scenario "Explanation of in-query procedure call"
Feature "IndexAcceptance": Scenario "STARTS WITH should handle null prefix"
Feature "OrderByAcceptance": Scenario "ORDER BY nodes should return null results last in ascending order"
Feature "OrderByAcceptance": Scenario "ORDER BY relationships should return null results last in ascending order"
Feature "OrderByAcceptance": Scenario "Ordering is well defined across all types, ascending"
Feature "OrderByAcceptance": Scenario "Ordering is well defined across all types, descending"
Feature "OrderByAcceptance": Scenario "Ordering for lists, ascending"
Feature "OrderByAcceptance": Scenario "Ordering for lists, descending"
Feature "OrderByAcceptance": Scenario "ORDER BY node problem"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure that takes arguments fails when trying to pass them implicitly"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure that takes no arguments"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure that takes no arguments"
Feature "ProcedureCallAcceptance": Scenario "Calling the same procedure twice using the same outputs in each call"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to VOID procedure that takes no arguments"
Feature "ProcedureCallAcceptance": Scenario "In-query call to VOID procedure that takes no arguments"
Feature "ProcedureCallAcceptance": Scenario "In-query call to VOID procedure does not consume rows"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to VOID procedure that takes no arguments, called with implicit arguments"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with explicit arguments"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with explicit arguments"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with argument of type NUMBER accepts value of type INTEGER"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with argument of type NUMBER accepts value of type INTEGER"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with argument of type NUMBER accepts value of type FLOAT"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with argument of type NUMBER accepts value of type FLOAT"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with argument of type FLOAT accepts value of type INTEGER"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with argument of type FLOAT accepts value of type INTEGER"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure with null argument"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure with null argument"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure should fail if input type is wrong"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure should fail if input type is wrong"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure should fail if explicit argument is missing"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure should fail if explicit argument is missing"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure should fail if too many explicit argument are given"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure should fail if too many explicit argument are given"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to procedure should fail if implicit argument is missing"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure that has outputs fails if no outputs are yielded"
Feature "ProcedureCallAcceptance": Scenario "In-query call to procedure that both takes arguments and has outputs fails if the arguments are passed implicitly and no outputs are yielded"
Feature "ProcedureCallAcceptance": Scenario "Standalone call to unknown procedure should fail"
Feature "ProcedureCallAcceptance": Scenario "In-query call to unknown procedure should fail"
Feature "ProcedureCallAcceptance": Scenario "In-query procedure call should fail if shadowing an already bound variable"
Feature "ProcedureCallAcceptance": Scenario "In-query procedure call should fail if one of the argument expressions uses an aggregation function"
Feature "ReturnAcceptance": Scenario "LIMIT 0 should stop side effects"
Feature "SkipLimitAcceptance": Scenario "Negative parameter for LIMIT should not generate errors"
