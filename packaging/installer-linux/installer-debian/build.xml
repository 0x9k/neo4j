<project default="debian">
    <macrodef name="package">

        <attribute name="name"/>

        <sequential>
            <!-- Unzip the standalone distributions -->
            <local name="source.distribution" />
            <property name="source.distribution" location="${project.build.directory}/neo4j-@{name}-${neo4j.version}-unix.tar.gz"/>

            <untar src="${source.distribution}"
                   dest="${project.build.outputDirectory}"
                   compression="gzip"/>

            <!-- Move distributions into build folders -->
            <move toDir="${project.build.outputDirectory}/@{name}/server">
                <fileset dir="${project.build.outputDirectory}/neo4j-@{name}-${neo4j.version}"
                         includes="**"/>
            </move>

            <!-- Make the Neo4j init scripts available to debuild -->
            <copy toDir="${project.build.outputDirectory}/@{name}/server">
                <fileset dir="${project.build.sourceDirectory}/../resources/common">
                    <include name="neo4j-service"/>
                </fileset>
            </copy>

            <replace file="${project.build.outputDirectory}/@{name}/server/conf/neo4j-wrapper.conf"
                     token="unsupported.dbms.udc.source=tarball"
                     value="unsupported.dbms.udc.source=debian"/>

            <chmod perm="700">
                <fileset dir="${project.build.outputDirectory}/@{name}">
                    <include name="**/server/bin/neo4j"/>
                    <include name="**/server/bin/neo4j-shell"/>
                    <include name="**/server/bin/neo4j-import"/>
                    <include name="**/server/bin/neo4j-backup"/>
                </fileset>
            </chmod>

            <!-- Copy manpages into build folder -->
            <copy toDir="${project.build.outputDirectory}/@{name}/manpages">
                <fileset dir="${project.build.directory}/manpages" includes="**"/>
            </copy>

            <!-- Run installer projects -->
            <exec executable="debuild"
                  dir="${project.build.outputDirectory}/@{name}"
                  failonerror="true" >
                <arg line="-us"/>
                <arg line="-uc"/>
                <arg line="-B"/>
            </exec>

        </sequential>
    </macrodef>

    <target name="generate">
        <package name="community"/>
        <package name="enterprise"/>
    </target>

    <target name="publish_to_target" depends="generate">
        <!-- Copy installers from classes/ to target/ -->
        <copy
                file="${project.build.outputDirectory}/neo4j_${neo4j.version.debian_compliant}_all.deb"
                toFile="${project.build.directory}/neo4j_${neo4j.version.debian_compliant}_all.deb"/>
        <copy
                file="${project.build.outputDirectory}/neo4j-enterprise_${neo4j.version.debian_compliant}_all.deb"
                toFile="${project.build.directory}/neo4j-enterprise_${neo4j.version.debian_compliant}_all.deb"/>
    </target>

    <target name="debian" depends="publish_to_target"/>
</project>
