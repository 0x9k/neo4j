[[cypher-compatibility]]
= Compatibility

Cypher is not a static language - every new version brings new features and sometimes old features get dropped.
It is possible to access older language versions if that is needed.
There are two ways you can select which version to use.
You can configure your database with the configuration parameter `cypher.default_language_version`, and enter which version you'd like to use (see <<cypher-versions>>)).
Any Cypher query that doesn't explicitly say anything else, will use the version you have configured, or the latest version if none is configured.

The other way is on a query by query basis.
By simply putting `CYPHER 2.3` at the beginning, that particular query will be executed with the version of Cypher included in Neo4j 2.3.
Below is an example using the `START` clause to access a legacy index:

[source,cypher]
----
CYPHER 2.3
START n=node:nodes(name = "A")
RETURN n
----

